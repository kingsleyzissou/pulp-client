/*
Pulp 3 API

Testing PulpContainerNamespacesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package pulpclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/osbuild/pulp-client/pulpclient"
)

func Test_pulpclient_PulpContainerNamespacesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesAddRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesAddRole(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesDelete(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesListRoles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesListRoles(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesMyPermissions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesMyPermissions(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesRead(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpContainerNamespacesAPIService PulpContainerNamespacesRemoveRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerNamespaceHref string

		resp, httpRes, err := apiClient.PulpContainerNamespacesAPI.PulpContainerNamespacesRemoveRole(context.Background(), containerContainerNamespaceHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
