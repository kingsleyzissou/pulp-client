/*
Pulp 3 API

Testing DistributionsContainerAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package pulpclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/osbuild/pulp-client/pulpclient"
)

func Test_pulpclient_DistributionsContainerAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerAddRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerAddRole(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerDelete(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerListRoles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerListRoles(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerMyPermissions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerMyPermissions(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerPartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerPartialUpdate(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerRead(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerRemoveRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerRemoveRole(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsContainerAPIService DistributionsContainerContainerUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerDistributionHref string

		resp, httpRes, err := apiClient.DistributionsContainerAPI.DistributionsContainerContainerUpdate(context.Background(), containerContainerDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
